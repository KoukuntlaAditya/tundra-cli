{"version":3,"sources":["../../../src/handlers/profiles.js"],"names":["request","response","profiles","existsSync","readdirSync","map","file","split","slice","join","status","send","console","error"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;qEAEe,iBAAOA,OAAP,EAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGPC,oBAHO,GAGI,EAHJ;AAAA;AAAA,mBAKD,aAAGC,UAAH,CAAc,iCAAd,CALC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMQ,aAAGC,WAAH,CAAe,iCAAf,EAAoCC,GAApC,CAAwC;AAAA,qBAAQC,KAAKC,KAAL,CAAW,GAAX,EAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,EAA6BC,IAA7B,CAAkC,GAAlC,CAAR;AAAA,aAAxC,CANR;;AAAA;AAMTP,oBANS;;AAAA;;AASXD,qBAASS,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BT,QAA1B;AATW;AAAA;;AAAA;AAAA;AAAA;;AAWXU,oBAAQC,KAAR;AACAZ,qBAASS,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,0CAA1B;;AAZW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"profiles.js","sourcesContent":["import fs from 'fs';\nimport { PROFILE_DIRECTORY } from \"../services/profile\";\n\nexport default async (request, response) => {\n\n  try {\n    let profiles = [];\n\n    if (await fs.existsSync(PROFILE_DIRECTORY())) {\n      profiles = await fs.readdirSync(PROFILE_DIRECTORY()).map(file => file.split('.').slice(0, -1).join('.'));\n    }\n\n    response.status(200).send(profiles);\n  } catch (error) {\n    console.error(error);\n    response.status(500).send(\"There was a problem getting the profiles\");\n  }\n}\n"]}