{"version":3,"sources":["../../../src/services/closestMatch.js"],"names":["SIMILARITY_THRESHOLD","getClosestProfileMatch","originalRequest","profileName","requests","matches","forEach","similarity","compareTwoStrings","request","url","push","chain","sortBy","value","reverse"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;;;;;;;AAEO,IAAMA,sDAAuB,IAA7B;;AAEA,IAAMC;AAAA,qEAAyB,iBAAOC,eAAP,EAAwBC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEb,yCAA2BA,WAA3B,CAFa;;AAAA;AAE9BC,oBAF8B;AAIhCC,mBAJgC,GAItB,EAJsB;;AAMpC;;AACAD,qBAASE,OAAT,CAAiB,mBAAW;AAC1B,kBAAMC,aAAa,2BAAiBC,iBAAjB,CAAmCN,gBAAgBO,OAAhB,CAAwBC,GAA3D,EAAgED,QAAQA,OAAR,CAAgBC,GAAhF,CAAnB;;AAEA,kBAAIH,aAAaP,oBAAjB,EACEK,QAAQM,IAAR,CAAa,EAAEJ,sBAAF,EAAcE,gBAAd,EAAb;AACH,aALD;;AAPoC,6CAc7B,sBAAEJ,OAAF,EACJO,KADI,GAEJC,MAFI,CAEG,YAFH,EAGJC,KAHI,GAIJC,OAJI,GAIM,CAJN,CAd6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"closestMatch.js","sourcesContent":["import { getExistingProfileRequests } from \"./profile\";\nimport stringSimilarity from 'string-similarity';\nimport _ from \"lodash\";\n\nexport const SIMILARITY_THRESHOLD = 0.75;\n\nexport const getClosestProfileMatch = async (originalRequest, profileName) => {\n\n  const requests = await getExistingProfileRequests(profileName);\n\n  let matches = [];\n\n  // Calculate the similarity for the URL of each request\n  requests.forEach(request => {\n    const similarity = stringSimilarity.compareTwoStrings(originalRequest.request.url, request.request.url);\n\n    if (similarity > SIMILARITY_THRESHOLD)\n      matches.push({ similarity, request });\n  });\n\n  return _(matches)\n    .chain()\n    .sortBy('similarity')\n    .value()\n    .reverse()[0];\n};\n"]}