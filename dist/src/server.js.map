{"version":3,"sources":["../../src/server.js"],"names":["start","port","fixturesDirectory","server","use","json","delete","post","get","static","listen","console","log","green"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAMA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMA;AAAA,qEAAQ,iBAAOC,IAAP,EAAaC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEnB,iCAAS,EAAED,UAAF,EAAQC,oCAAR,EAAT;;AAEMC,kBAJa,GAIJ,wBAJI;;AAMnB;;AACAA,mBAAOC,GAAP,CAAW,qBAAWC,IAAX,EAAX;;AAEA;AACAF,mBAAOG,MAAP,CAAc,WAAd;AACAH,mBAAOI,IAAP,CAAY,WAAZ;AACAJ,mBAAOI,IAAP,CAAY,mBAAZ;AACAJ,mBAAOI,IAAP,CAAY,6BAAZ;AACAJ,mBAAOI,IAAP,CAAY,qBAAZ;AACAJ,mBAAOI,IAAP,CAAY,gBAAZ;;AAEAJ,mBAAOK,GAAP,CAAW,WAAX;;AAEAL,mBAAOK,GAAP,CAAW,WAAX;;AAEA;AACAL,mBAAOC,GAAP,CAAW,UAAX,EAAuB,kBAAQK,MAAR,CAAe,eAAf,CAAvB;;AAEAN,mBAAOO,MAAP,CAAcT,IAAd,EAAoB;AAAA,qBAAMU,QAAQC,GAAR,CAAY,gBAAMC,KAAN,mEAA4EZ,IAA5E,eAAZ,CAAN;AAAA,aAApB;;AAxBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAR;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"server.js","sourcesContent":["import 'babel-polyfill';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport chalk from 'chalk';\nimport {\n  handleMatchedRequest,\n  handlePartiallyMatchedRequest,\n  handleRequest,\n  handleUnmatchedRequest, resetRequestsHandler, saveRequestsHandler\n} from './handlers/requests';\nimport settingsHandler from './handlers/settings';\nimport profilesHandler from './handlers/profiles';\nimport { setState } from './services/state';\n\nexport const start = async (port, fixturesDirectory) => {\n\n  setState({ port, fixturesDirectory });\n\n  const server = express();\n\n  // Settings\n  server.use(bodyParser.json());\n\n  // Routes\n  server.delete('/requests', resetRequestsHandler);\n  server.post('/requests', handleRequest);\n  server.post('/requests/matched', handleMatchedRequest);\n  server.post('/requests/partially-matched', handlePartiallyMatchedRequest);\n  server.post('/requests/unmatched', handleUnmatchedRequest);\n  server.post('/requests/save', saveRequestsHandler);\n\n  server.get('/settings', settingsHandler);\n\n  server.get('/profiles', profilesHandler);\n\n  // Console\n  server.use('/console', express.static('console/build'));\n\n  server.listen(port, () => console.log(chalk.green(`Tundra server started. Console available at http://localhost:${port}/console.`)));\n};\n\n\n"]}